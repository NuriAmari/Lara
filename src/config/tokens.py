from langtools.lexer.token import Token

IntegerToken = Token(name="INTEGER", priority=1)
IdentifierToken = Token(name="IDENTIFIER", priority=1)

CommaToken = Token(name="COMMA", priority=0)
LeftCurlyToken = Token(name="LEFT_CURLY", priority=0)
RightCurlyToken = Token(name="RIGHT_CURLY", priority=0)
LeftParenToken = Token(name="LEFT_PAREN", priority=0)
RightParenToken = Token(name="RIGHT_PAREN", priority=0)
IfToken = Token(name="IF", priority=0)
ElseToken = Token(name="ELSE", priority=0)
ElifToken = Token(name="ELIF", priority=0)
FuncToken = Token(name="FUNC", priority=0)
WhileToken = Token(name="WHILE", priority=0)
ForToken = Token(name="FOR", priority=0)
PlusToken = Token(name="PLUS", priority=0)
MinusToken = Token(name="MINUS", priority=0)
MultiplyToken = Token(name="MULTIPLY", priority=0)
PowerToken = Token(name="POWER", priority=0)
DivideToken = Token(name="DIVIDE", priority=0)
SemiColonToken = Token(name="SEMI_COLON", priority=0)
PrintToken = Token(name="PRINT", priority=0)
LetToken = Token(name="LET", priority=0)
AssignToken = Token(name="ASSIGN", priority=0)
CompareToken = Token(name="COMPARE", priority=0)
LessToken = Token(name="LESS", priority=0)
GreaterToken = Token(name="GREATER", priority=0)
LessEqualToken = Token(name="LESS_EQUAL", priority=0)
GreaterEqualToken = Token(name="GREATER_EQUAL", priority=0)
ReturnToken = Token(name="RETURN", priority=0)
